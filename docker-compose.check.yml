services:
  api-test:
    build:
      context: .
      dockerfile: ./.docker/api/Dockerfile
    entrypoint: ./.docker/api/entrypoint.test.sh
    container_name: api-test
    volumes:
      - '.:/home/node/app'
    environment:
      - NODE_ENV=test
      - TEST=$TEST
    ports:
      - '3000:3000'
    depends_on:
      - db-test
    networks:
      - api-net-test
    mem_limit: 2g

  db-test:
    build:
      context: ./.docker/postgres
      dockerfile: Dockerfile
    command: postgres -c 'config_file=/etc/postgresql/postgresql.conf'
    container_name: db-test
    volumes:
      - './.docker/postgres/config/postgresql.conf:/etc/postgresql/postgresql.conf'
    environment:
      - POSTGRES_DB=gac-test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5050:5050'
    networks:
      - api-net-test
    mem_limit: 1g

  jaeger:
    image: jaegertracing/jaeger:2.5.0
    container_name: jaeger
    ports:
      - '8081:16686' # Jaeger UI
      - '6831:6831/udp' # UDP port for Jaeger agent
      - '14268:14268' # HTTP port for spans
    networks:
      - api-net-test

  otel-collector:
    image: otel/opentelemetry-collector:latest
    container_name: otel-collector
    command: ['--config=/etc/otel-collector-config.yml']
    volumes:
      - ./otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - '4317:4317' # OTLP gRPC receiver
    depends_on:
      - jaeger
    links:
      - jaeger
    networks:
      - api-net-test

networks:
  api-net-test:
    driver: bridge
